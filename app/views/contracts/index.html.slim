h3 =link_to :Home, root_path
h1 Contracts 
h3 #{@contracts.total_count} contracts worth #{show_big_money(@total_value)}
h4 Including #{@expired.count} expired contracts #{link_to "(View)",contracts_path(expired: true)}
- %w/product supplier_name organisation_name/.each do |param|
  - if(params[param])
    h2 Filtered: #{param.humanize}: #{params[param]}
    =link_to "Show all",page: params[:page]
- if(params[:end_date_before])
  h2 Filtered where end date is before 1 Apr #{Date.parse(params[:end_date_before]).year+1}
  =link_to "Show all",page: params[:page]
  
= paginate @contracts

.table-responsive
  table.table.table-striped.table-bordered.table-hover
    thead
      tr
        th
          | Reference
        th
          | Department
        th
          | Organisation
        th
          | Supplier name
        th
          | Value
        th
          | End date
        th
          | Products
    tbody
      - @contracts.each do | contract |
        tr
          td
            = link_to contract.reference, contract
          td
            = link_to contract.department.name, contract.department if(contract.department)
          td = link_to contract.organisation.name, organisation_name: contract.organisation.name if contract.organisation
          td = link_to contract.supplier_name, supplier_name: contract.supplier_name
          td
            /= "Â£" + number_to_human(contract.value, units: {thousand: "k", million: "m", billion: "bn"}).to_s
            =  show_big_money contract.value
          td
            = link_to contract.end_date.strftime("%d %h %Y"), end_date_before:contract.end_date if contract.end_date
          td = link_to contract.product, product: contract.product if contract.product

= paginate @contracts

-if is_admin?
  = link_to "Create New Contract", new_contract_path, class: 'button'

  h2 Import Contract Data
  == render partial: 'shared/import', locals: {path:import_contracts_path}
